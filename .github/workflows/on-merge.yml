name: On Merge
on:
  push:
    branches:
      - main

jobs:
  analyse:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version-file: '.java-version'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-on-merge
          restore-keys: ${{ runner.os }}-sonar-on-merge

      - name: Prepare
        shell: bash
        run: |
          echo "Removing symbolic link to assets..."
          rm frontend/src/main/resources/static

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew build sonarqube --info

  publish:
    runs-on: ubuntu-latest
    needs:
      - analyse
    permissions:
      id-token: write
      contents: write
      packages: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version-file: '.java-version'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        shell: bash
        run: |
          echo "Removing symbolic link to assets..."
          rm frontend/src/main/resources/static

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew build -x sonarqube --info

      - name: Generate Release
        id: generate-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          
          RELEASE="$(date -u +%Y%m%d.%H.%M)"
          gh release create \
            --latest \
            --title "Release v${RELEASE}" \
            "v${RELEASE}"
          
          echo "release=v${RELEASE}" >> "${GITHUB_OUTPUT}"

      - name: Build frontend image
        id: build-frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            mersthamcc/frontend:latest
            ghcr.io/mersthamcc/website-frontend:latest
            mersthamcc/frontend:${{ steps.generate-release.outputs.release }}
            ghcr.io/mersthamcc/website-frontend:${{ steps.generate-release.outputs.release }}

          build-args: |
            COMPONENT=frontend

      - name: Build GraphQL image
        id: build-graphql
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            mersthamcc/graphql:latest
            ghcr.io/mersthamcc/website-graphql:latest
            mersthamcc/graphql:${{ steps.generate-release.outputs.release }}
            ghcr.io/mersthamcc/website-graphql:${{ steps.generate-release.outputs.release }}
          build-args: |
            COMPONENT=graphql

      - name: Build Flyway image
        id: build-flyway
        uses: docker/build-push-action@v5
        with:
          context: sql/
          push: true
          tags: |
            mersthamcc/flyway:latest
            ghcr.io/mersthamcc/website-flyway:latest
            mersthamcc/flyway:${{ steps.generate-release.outputs.release }}
            ghcr.io/mersthamcc/website-flyway:${{ steps.generate-release.outputs.release }}

      - name: Dispatch deployment event
        uses: actions/github-script@v7
        env:
          GRAPHQL_DIGEST: ${{ steps.build-graphql.outputs.digest }}
          FRONTEND_DIGEST: ${{ steps.build-frontend.outputs.digest }}
          FLYWAY_DIGEST: ${{ steps.build-flyway.outputs.digest }}
          IMAGE_TAG: ${{ steps.generate-release.outputs.release }}
        with:
          github-token: ${{ secrets.DEPLOYMENT_PAT }}
          script: |
            const { GRAPHQL_DIGEST, FRONTEND_DIGEST, FLYWAY_DIGEST, IMAGE_TAG } = process.env

            const result = await github.rest.repos.createDispatchEvent({
              owner: 'mersthamcc',
              repo: 'infrastructure',
              event_type: 'app-release',
              client_payload: {
                "graphql_digest": GRAPHQL_DIGEST,
                "frontend_digest": FRONTEND_DIGEST,
                "flyway_digest": FLYWAY_DIGEST,
                "image_tag": IMAGE_TAG
              }
            });
