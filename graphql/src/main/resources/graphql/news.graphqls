type News {
    id: Int!
    uuid: String
    title: String!
    path: String
    createdDate: DateTime!
    publishDate: DateTime
    body: String!
    socialSummary: String
    author: String
    draft: Boolean
    attributes: [KeyValuePair]
}

input NewsInput {
    id: Int
    uuid: String
    title: String
    createdDate: DateTime
    publishDate: DateTime
    body: String
    author: String
    path: String
    draft: Boolean
    socialSummary: String
    attributes: [KeyValuePairInput]
}

extend type Query {
    feed(page: Int): [News]
    topNews(count: Int): [News]
    newsItemByPath(path: String!): News
    newsItem(id: Int!): News
    news(start: Int!, length: Int!, searchString: String): [News]
}

extend type Mutation {
    saveNews(news: NewsInput!): News
    deleteNews(id: Int!): News
    saveNewsAttributes(id: Int!, attributes: [KeyValuePairInput]!): News
    removeNewsAttributes(id: Int!, attributes: [String]!): News
}